<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wowspeeder.shadowsocks.dao.UserTrafficLogMapper">
    <resultMap id="BaseResultMap" type="cn.wowspeeder.shadowsocks.model.UserTrafficLog">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="u" property="u" jdbcType="INTEGER"/>
        <result column="d" property="d" jdbcType="INTEGER"/>
        <result column="node_id" property="nodeId" jdbcType="INTEGER"/>
        <result column="node_info" property="nodeInfo" jdbcType="VARCHAR"/>
        <result column="rate" property="rate" jdbcType="REAL"/>
        <result column="traffic" property="traffic" jdbcType="VARCHAR"/>
        <result column="log_time" property="logTime" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_id, u, d, node_id,node_info, rate, traffic, log_time
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLogExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_traffic_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_traffic_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_traffic_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLogExample">
        delete from user_traffic_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLog">
    insert into user_traffic_log (id, user_id, u, 
      d, node_id, rate, traffic, 
      log_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{u,jdbcType=INTEGER}, 
      #{d,jdbcType=INTEGER}, #{nodeId,jdbcType=INTEGER}, #{rate,jdbcType=REAL}, #{traffic,jdbcType=VARCHAR}, 
      #{logTime,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLog">
        insert into user_traffic_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="u != null">
                u,
            </if>
            <if test="d != null">
                d,
            </if>
            <if test="nodeId != null">
                node_id,
            </if>
            <if test="rate != null">
                rate,
            </if>
            <if test="traffic != null">
                traffic,
            </if>
            <if test="logTime != null">
                log_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="u != null">
                #{u,jdbcType=INTEGER},
            </if>
            <if test="d != null">
                #{d,jdbcType=INTEGER},
            </if>
            <if test="nodeId != null">
                #{nodeId,jdbcType=INTEGER},
            </if>
            <if test="rate != null">
                #{rate,jdbcType=REAL},
            </if>
            <if test="traffic != null">
                #{traffic,jdbcType=VARCHAR},
            </if>
            <if test="logTime != null">
                #{logTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLogExample"
            resultType="java.lang.Integer">
        select count(*) from user_traffic_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_traffic_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.u != null">
                u = #{record.u,jdbcType=INTEGER},
            </if>
            <if test="record.d != null">
                d = #{record.d,jdbcType=INTEGER},
            </if>
            <if test="record.nodeId != null">
                node_id = #{record.nodeId,jdbcType=INTEGER},
            </if>
            <if test="record.rate != null">
                rate = #{record.rate,jdbcType=REAL},
            </if>
            <if test="record.traffic != null">
                traffic = #{record.traffic,jdbcType=VARCHAR},
            </if>
            <if test="record.logTime != null">
                log_time = #{record.logTime,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_traffic_log
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        u = #{record.u,jdbcType=INTEGER},
        d = #{record.d,jdbcType=INTEGER},
        node_id = #{record.nodeId,jdbcType=INTEGER},
        rate = #{record.rate,jdbcType=REAL},
        traffic = #{record.traffic,jdbcType=VARCHAR},
        log_time = #{record.logTime,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLog">
        update user_traffic_log
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="u != null">
                u = #{u,jdbcType=INTEGER},
            </if>
            <if test="d != null">
                d = #{d,jdbcType=INTEGER},
            </if>
            <if test="nodeId != null">
                node_id = #{nodeId,jdbcType=INTEGER},
            </if>
            <if test="rate != null">
                rate = #{rate,jdbcType=REAL},
            </if>
            <if test="traffic != null">
                traffic = #{traffic,jdbcType=VARCHAR},
            </if>
            <if test="logTime != null">
                log_time = #{logTime,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLog">
    update user_traffic_log
    set user_id = #{userId,jdbcType=INTEGER},
      u = #{u,jdbcType=INTEGER},
      d = #{d,jdbcType=INTEGER},
      node_id = #{nodeId,jdbcType=INTEGER},
      rate = #{rate,jdbcType=REAL},
      traffic = #{traffic,jdbcType=VARCHAR},
      log_time = #{logTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select resultMap="BaseResultMap" parameterType="cn.wowspeeder.shadowsocks.model.UserTrafficLogExample"
            id="selectByExampleWithRowbounds">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_traffic_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>